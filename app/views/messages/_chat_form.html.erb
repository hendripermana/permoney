<%# locals: (chat: nil, message_hint: nil, floating: false, message: nil) %>

<div id="chat-form" class="space-y-2">
  <% message_hint = local_assigns.fetch(:message_hint, nil) %>
  <% floating = local_assigns.fetch(:floating, false) %>
  <% message_record = local_assigns.fetch(:message, nil) || (defined?(@message) && @message.is_a?(Message) ? @message : nil) %>
  <% if chat && chat.persisted? %>
    <% message_record = message_record if message_record.is_a?(Message) %>
  <% else %>
    <% message_record = nil %>
  <% end %>
  <% model = if chat && chat.persisted?
    message_record ||= Message.new
    [chat, message_record]
  else
    Chat.new
  end %>
  <% form_options = {
    class: "flex lg:flex-col gap-2 bg-container px-2 py-1.5 rounded-full lg:rounded-lg shadow-border-xs",
    data: { chat_target: "form" }
  } %>
  <% if floating %>
    <% form_options[:url] =
      if chat && chat.persisted?
        chat_messages_path(chat, floating: true)
      else
        chats_path(floating: true)
      end %>
  <% end %>

  <% if message_record&.errors&.any? %>
    <div class="px-2 py-1">
      <%= render "shared/form_errors", model: message_record %>
    </div>
  <% end %>

  <%= form_with model: model, **form_options do |f| %>

    <%# In the future, this will be a dropdown with different AI models %>
    <%= f.hidden_field :ai_model, value: default_ai_model %>

    <% text_area_options = {
      placeholder: "Ask anything ...",
      class: "w-full border-0 focus:ring-0 text-sm resize-none px-1 bg-transparent",
      data: { chat_target: "input", action: "input->chat#autoResize keydown->chat#handleInputKeyDown" },
      rows: 1
    } %>
    <% if message_hint.present? %>
      <% text_area_options[:value] = message_hint %>
    <% end %>

    <%= f.text_area :content, **text_area_options %>

    <div class="flex items-center justify-between gap-1">
      <div class="items-center gap-1 hidden lg:flex">
        <%# These are disabled for now, but in the future, will all open specific menus with their own context and search %>
        <% ["plus", "command", "at-sign", "mouse-pointer-click"].each do |icon| %>
          <%= icon(icon, as_button: true, disabled: true, class: "cursor-not-allowed", title: "Coming soon") %>
        <% end %>
      </div>

      <%= icon("arrow-up", as_button: true, type: "submit") %>
    </div>
  <% end %>

  <p class="text-xs text-secondary">AI responses are informational only and are not financial advice.</p>
</div>
